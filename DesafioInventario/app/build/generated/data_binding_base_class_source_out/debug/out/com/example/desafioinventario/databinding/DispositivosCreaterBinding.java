// Generated by view binder compiler. Do not edit!
package com.example.desafioinventario.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.desafioinventario.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DispositivosCreaterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edIdentificadorDispositivoCreater;

  @NonNull
  public final EditText edNombreDispositivoCreater;

  @NonNull
  public final Spinner spAulaDispositivosCreater;

  @NonNull
  public final TextView txtAulaDispositivosCreater;

  private DispositivosCreaterBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText edIdentificadorDispositivoCreater,
      @NonNull EditText edNombreDispositivoCreater, @NonNull Spinner spAulaDispositivosCreater,
      @NonNull TextView txtAulaDispositivosCreater) {
    this.rootView = rootView;
    this.edIdentificadorDispositivoCreater = edIdentificadorDispositivoCreater;
    this.edNombreDispositivoCreater = edNombreDispositivoCreater;
    this.spAulaDispositivosCreater = spAulaDispositivosCreater;
    this.txtAulaDispositivosCreater = txtAulaDispositivosCreater;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DispositivosCreaterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DispositivosCreaterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dispositivos_creater, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DispositivosCreaterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edIdentificadorDispositivoCreater;
      EditText edIdentificadorDispositivoCreater = ViewBindings.findChildViewById(rootView, id);
      if (edIdentificadorDispositivoCreater == null) {
        break missingId;
      }

      id = R.id.edNombreDispositivoCreater;
      EditText edNombreDispositivoCreater = ViewBindings.findChildViewById(rootView, id);
      if (edNombreDispositivoCreater == null) {
        break missingId;
      }

      id = R.id.spAulaDispositivosCreater;
      Spinner spAulaDispositivosCreater = ViewBindings.findChildViewById(rootView, id);
      if (spAulaDispositivosCreater == null) {
        break missingId;
      }

      id = R.id.txtAulaDispositivosCreater;
      TextView txtAulaDispositivosCreater = ViewBindings.findChildViewById(rootView, id);
      if (txtAulaDispositivosCreater == null) {
        break missingId;
      }

      return new DispositivosCreaterBinding((ConstraintLayout) rootView,
          edIdentificadorDispositivoCreater, edNombreDispositivoCreater, spAulaDispositivosCreater,
          txtAulaDispositivosCreater);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
